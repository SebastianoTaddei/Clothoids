<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.11.0" xml:lang="en-US">
  <compounddef id="_clothoid_8cc" kind="file" language="C++">
    <compoundname>Clothoid.cc</compoundname>
    <includes refid="_clothoids_8hh" local="yes">Clothoids.hh</includes>
    <includes refid="_clothoids__fmt_8hh" local="yes">Clothoids_fmt.hh</includes>
    <includes local="no">cmath</includes>
    <includes local="no">cfloat</includes>
    <includes local="no">algorithm</includes>
    <incdepgraph>
      <node id="1">
        <label>/Users/enrico/Ricerca/develop/PINS/pins-mechatronix/LibSources/submodules/Clothoids/src/Clothoid.cc</label>
        <link refid="_clothoid_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Clothoids.hh</label>
        <link refid="_clothoids_8hh"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>Clothoids/BBox.hxx</label>
        <link refid="_b_box_8hxx"/>
      </node>
      <node id="20">
        <label>Clothoids/BaseCurve.hxx</label>
        <link refid="_base_curve_8hxx"/>
      </node>
      <node id="23">
        <label>BaseCurve_using.hxx</label>
        <link refid="_base_curve__using_8hxx"/>
      </node>
      <node id="25">
        <label>Clothoids/Biarc.hxx</label>
        <link refid="_biarc_8hxx"/>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>Clothoids/BiarcList.hxx</label>
        <link refid="_biarc_list_8hxx"/>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>Clothoids/Circle.hxx</label>
        <link refid="_circle_8hxx"/>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>Clothoids/Clothoid.hxx</label>
        <link refid="_clothoid_8hxx"/>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>Clothoids/ClothoidAsyPlot.hxx</label>
        <link refid="_clothoid_asy_plot_8hxx"/>
      </node>
      <node id="29">
        <label>Clothoids/ClothoidList.hxx</label>
        <link refid="_clothoid_list_8hxx"/>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>Clothoids/Dubins.hxx</label>
        <link refid="_dubins_8hxx"/>
      </node>
      <node id="32">
        <label>Clothoids/Dubins3p.hxx</label>
        <link refid="_dubins3p_8hxx"/>
      </node>
      <node id="21">
        <label>Clothoids/Fresnel.hxx</label>
        <link refid="_fresnel_8hxx"/>
      </node>
      <node id="17">
        <label>Clothoids/G2lib.hxx</label>
        <link refid="_g2lib_8hxx"/>
      </node>
      <node id="22">
        <label>Clothoids/Line.hxx</label>
        <link refid="_line_8hxx"/>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>Clothoids/PolyLine.hxx</label>
        <link refid="_poly_line_8hxx"/>
      </node>
      <node id="18">
        <label>Clothoids/Triangle2D.hxx</label>
        <link refid="_triangle2_d_8hxx"/>
      </node>
      <node id="33">
        <label>Clothoids_fmt.hh</label>
        <link refid="_clothoids__fmt_8hh"/>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>GenericContainer/GenericContainer.hh</label>
      </node>
      <node id="3">
        <label>Utils.hh</label>
      </node>
      <node id="4">
        <label>Utils_AABB_tree.hh</label>
      </node>
      <node id="34">
        <label>Utils_fmt.hh</label>
      </node>
      <node id="14">
        <label>algorithm</label>
      </node>
      <node id="35">
        <label>cfloat</label>
      </node>
      <node id="10">
        <label>cmath</label>
      </node>
      <node id="7">
        <label>fstream</label>
      </node>
      <node id="9">
        <label>iomanip</label>
      </node>
      <node id="8">
        <label>iostream</label>
      </node>
      <node id="15">
        <label>iterator</label>
      </node>
      <node id="12">
        <label>map</label>
      </node>
      <node id="16">
        <label>memory</label>
      </node>
      <node id="6">
        <label>string</label>
      </node>
      <node id="13">
        <label>utility</label>
      </node>
      <node id="11">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_g2lib">G2lib</innernamespace>
    <sectiondef kind="define">
      <memberdef kind="define" id="_clothoid_8cc_1a4909e1a0c83314c6982b938f1c4d5c33" prot="public" static="no">
        <name>G2LIB_DEBUG_TICTOC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/PINS/pins-mechatronix/LibSources/submodules/Clothoids/src/Clothoid.cc" line="42" column="16" bodyfile="/Users/enrico/Ricerca/develop/PINS/pins-mechatronix/LibSources/submodules/Clothoids/src/Clothoid.cc" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_clothoid_8cc_1a2fff7467d646026b2e771d3e4cd55542" prot="public" static="no">
        <name>G2LIB_DEBUG_TIC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/PINS/pins-mechatronix/LibSources/submodules/Clothoids/src/Clothoid.cc" line="43" column="13" bodyfile="/Users/enrico/Ricerca/develop/PINS/pins-mechatronix/LibSources/submodules/Clothoids/src/Clothoid.cc" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_clothoid_8cc_1aafb2dc57b5fdd028efc50baf733fc66d" prot="public" static="no">
        <name>G2LIB_DEBUG_TOC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/enrico/Ricerca/develop/PINS/pins-mechatronix/LibSources/submodules/Clothoids/src/Clothoid.cc" line="44" column="13" bodyfile="/Users/enrico/Ricerca/develop/PINS/pins-mechatronix/LibSources/submodules/Clothoids/src/Clothoid.cc" bodystart="44" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*--------------------------------------------------------------------------*\</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>|<sp/><sp/>Copyright<sp/>(C)<sp/>2017<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>__<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>__<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/|/<sp/><sp/>\<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/|/<sp/><sp/>\<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>__/<sp/>_<sp/><sp/><sp/>,_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>__/<sp/>_<sp/><sp/><sp/>,_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/>\|/<sp/><sp/>/<sp/><sp/>|<sp/><sp/>|<sp/><sp/><sp/>|<sp/>|<sp/><sp/><sp/>\|/<sp/><sp/>/<sp/><sp/>|<sp/><sp/>|<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|(__/|__/<sp/><sp/><sp/>|_/<sp/>\_/|/|(__/|__/<sp/><sp/><sp/>|_/<sp/>\_/|/<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>Enrico<sp/>Bertolazzi<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>Dipartimento<sp/>di<sp/>Ingegneria<sp/>Industriale<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>Universita`<sp/>degli<sp/>Studi<sp/>di<sp/>Trento<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>email:<sp/>enrico.bertolazzi@unitn.it<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="18"><highlight class="comment">\*--------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_clothoids_8hh" kindref="compound">Clothoids.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_clothoids__fmt_8hh" kindref="compound">Clothoids_fmt.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>workaround<sp/>for<sp/>windows<sp/>that<sp/>defines<sp/>max<sp/>and<sp/>min<sp/>as<sp/>macros!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>max</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>max</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>min</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>min</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cfloat&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_g2lib" kindref="compound">G2lib</ref><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifdef<sp/>G2LIB_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>G2LIB_DEBUG_TICTOC<sp/>Utils::TicToc<sp/>tictoc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>G2LIB_DEBUG_TIC<sp/><sp/><sp/><sp/>tictoc.tic()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>G2LIB_DEBUG_TOC<sp/><sp/><sp/><sp/>tictoc.toc()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>G2LIB_DEBUG_TICTOC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>G2LIB_DEBUG_TIC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>G2LIB_DEBUG_TOC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">std::vector;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">std::abs;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">std::min;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">std::max;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">std::swap;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">std::ceil;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">std::floor;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">std::isfinite;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><ref refid="namespace_g2lib_1a17146eb1606475bedc9a2d27f3b29e34" kindref="member">integer</ref><sp/><sp/><sp/><ref refid="class_g2lib_1_1_clothoid_curve_1a2397a9545b6ffef81d9f88df39cfb7ff" kindref="member">ClothoidCurve::m_max_iter</ref><sp/><sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/><ref refid="class_g2lib_1_1_clothoid_curve_1aa3331a92fa5a3146a9866288abe2b992" kindref="member">ClothoidCurve::m_tolerance</ref><sp/>=<sp/>0.01745329252;<sp/></highlight><highlight class="comment">//<sp/>1<sp/>degree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><ref refid="class_g2lib_1_1_clothoid_curve_1a71ef8258d0a30a533b922c0acb92dce6" kindref="member">ClothoidCurve::setup</ref>(<sp/><ref refid="namespace_g2lib_1a2bee1fb11cb401bacb26ad157b301feb" kindref="member">GenericContainer</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>gc<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>cwhere{<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;ClothoidCurve[{}]::setup(<sp/>gc<sp/>):&quot;</highlight><highlight class="normal">,<sp/>this-&gt;<ref refid="class_g2lib_1_1_base_curve_1a15a9cd79a8c95b3c9b1b95721e076de7" kindref="member">name</ref>()<sp/>)<sp/>};</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>where{<sp/>cwhere.c_str()<sp/>};</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>x0<sp/><sp/><sp/><sp/><sp/>=<sp/>gc.get_map_number(</highlight><highlight class="stringliteral">&quot;x0&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>where<sp/>);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>y0<sp/><sp/><sp/><sp/><sp/>=<sp/>gc.get_map_number(</highlight><highlight class="stringliteral">&quot;y0&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>where<sp/>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>theta0<sp/>=<sp/>gc.get_map_number(</highlight><highlight class="stringliteral">&quot;theta0&quot;</highlight><highlight class="normal">,<sp/>where<sp/>);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>x1<sp/><sp/><sp/><sp/><sp/>=<sp/>gc.get_map_number(</highlight><highlight class="stringliteral">&quot;x1&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>where<sp/>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>y1<sp/><sp/><sp/><sp/><sp/>=<sp/>gc.get_map_number(</highlight><highlight class="stringliteral">&quot;y1&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>where<sp/>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>theta1<sp/>=<sp/>gc.get_map_number(</highlight><highlight class="stringliteral">&quot;theta1&quot;</highlight><highlight class="normal">,<sp/>where<sp/>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ok<sp/>=<sp/>this-&gt;<ref refid="class_g2lib_1_1_clothoid_curve_1ab65c8b860e5cdd5cb88410afb55ea614" kindref="member">build_G1</ref>(<sp/>x0,<sp/>y0,<sp/>theta0,<sp/>x1,<sp/>y1,<sp/>theta1<sp/>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>UTILS_ASSERT(<sp/>ok,<sp/></highlight><highlight class="stringliteral">&quot;ClothoidCurve[{}]::setup(<sp/>gc<sp/>)<sp/>failed\n&quot;</highlight><highlight class="normal">,<sp/>this-&gt;<ref refid="class_g2lib_1_1_base_curve_1a15a9cd79a8c95b3c9b1b95721e076de7" kindref="member">name</ref>()<sp/>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><ref refid="class_g2lib_1_1_clothoid_curve_1ad6463aa0d8cba5cfdd113b537a868169" kindref="member">ClothoidCurve::ClothoidCurve</ref>(<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>name<sp/>)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>:<sp/>BaseCurve(<sp/>name<sp/>)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>m_CD.m_x0<sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>m_CD.m_y0<sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>m_CD.m_theta0<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>m_CD.m_kappa0<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>m_CD.m_dk<sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>m_L<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>ClothoidCurve::ClothoidCurve(<sp/>ClothoidCurve<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>s<sp/>)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>:<sp/>BaseCurve(<sp/>s.name()<sp/>)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>{<sp/>this-&gt;copy(s);<sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>ClothoidCurve::ClothoidCurve(</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/>x0,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/>y0,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/>theta0,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/>k,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/>dk,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/>L,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>name</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>)<sp/>:<sp/>BaseCurve(<sp/>name<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>m_CD.m_x0<sp/><sp/><sp/><sp/><sp/>=<sp/>x0;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>m_CD.m_y0<sp/><sp/><sp/><sp/><sp/>=<sp/>y0;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>m_CD.m_theta0<sp/>=<sp/>theta0;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>m_CD.m_kappa0<sp/>=<sp/>k;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>m_CD.m_dk<sp/><sp/><sp/><sp/><sp/>=<sp/>dk;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>m_L<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>L;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>ClothoidCurve::ClothoidCurve(</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><sp/><sp/>P0[],</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theta0,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><sp/><sp/>P1[],</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theta1,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>name</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>)<sp/>:<sp/>BaseCurve(<sp/>name<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>build_G1(<sp/>P0[0],<sp/>P0[1],<sp/>theta0,<sp/>P1[0],<sp/>P1[1],<sp/>theta1<sp/>);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>ClothoidCurve::copy(<sp/>ClothoidCurve<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>c<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>m_CD<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>c.m_CD;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>m_L<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>c.m_L;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>m_aabb_done<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>m_aabb_triangles.clear();</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>ClothoidCurve::build(<sp/>LineSegment<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>LS<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>m_CD.m_x0<sp/><sp/><sp/><sp/><sp/>=<sp/>LS.m_x0;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>m_CD.m_y0<sp/><sp/><sp/><sp/><sp/>=<sp/>LS.m_y0;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>m_CD.m_theta0<sp/>=<sp/>LS.m_theta0;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>m_CD.m_kappa0<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>m_CD.m_dk<sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>m_L<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>LS.m_L;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>m_aabb_done<sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>m_aabb_triangles.clear();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>ClothoidCurve::build(<sp/>CircleArc<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>C<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>m_CD.m_x0<sp/><sp/><sp/><sp/><sp/>=<sp/>C.m_x0;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>m_CD.m_y0<sp/><sp/><sp/><sp/><sp/>=<sp/>C.m_y0;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>m_CD.m_theta0<sp/>=<sp/>C.m_theta0;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>m_CD.m_kappa0<sp/>=<sp/>C.m_k;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>m_CD.m_dk<sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>m_L<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>C.m_L;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>m_aabb_done<sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>m_aabb_triangles.clear();</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>ClothoidCurve::build(<sp/>ClothoidCurve<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>C<sp/>)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>{<sp/>this-&gt;copy(C);<sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ClothoidCurve::build(<sp/>Biarc<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>UTILS_ERROR(</highlight><highlight class="stringliteral">&quot;can<sp/>convert<sp/>from<sp/>Biarc<sp/>to<sp/>ClothoidCurve\n&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ClothoidCurve::build(<sp/>PolyLine<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>)<sp/><sp/><sp/><sp/><sp/>{<sp/>UTILS_ERROR(</highlight><highlight class="stringliteral">&quot;can<sp/>convert<sp/>from<sp/>PolyLine<sp/>to<sp/>ClothoidCurve\n&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ClothoidCurve::build(<sp/>BiarcList<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>)<sp/><sp/><sp/><sp/>{<sp/>UTILS_ERROR(</highlight><highlight class="stringliteral">&quot;can<sp/>convert<sp/>from<sp/>BiarcList<sp/>to<sp/>ClothoidCurve\n&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ClothoidCurve::build(<sp/>ClothoidList<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>)<sp/>{<sp/>UTILS_ERROR(</highlight><highlight class="stringliteral">&quot;can<sp/>convert<sp/>from<sp/>ClothoidList<sp/>to<sp/>ClothoidCurve\n&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ClothoidCurve::build(<sp/>Dubins<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>UTILS_ERROR(</highlight><highlight class="stringliteral">&quot;can<sp/>convert<sp/>from<sp/>Dubins<sp/>to<sp/>ClothoidCurve\n&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ClothoidCurve::build(<sp/>Dubins3p<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>)<sp/><sp/><sp/><sp/><sp/>{<sp/>UTILS_ERROR(</highlight><highlight class="stringliteral">&quot;can<sp/>convert<sp/>from<sp/>Dubins3p<sp/>to<sp/>ClothoidCurve\n&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>ClothoidCurve::build(</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/>x0,</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/>y0,</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/>theta0,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/>k,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/>dk,</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/>L</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>UTILS_ASSERT(</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>L<sp/>&gt;<sp/>0,</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ClothoidCurve::build(<sp/>x0={},<sp/>y0={},<sp/>theta0={},<sp/>k={},<sp/>dk={},<sp/>L={}<sp/>)\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;L<sp/>must<sp/>be<sp/>positive!\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x0,<sp/>y0,<sp/>theta0,<sp/>k,<sp/>dk,<sp/>L</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>m_CD.m_x0<sp/><sp/><sp/><sp/><sp/>=<sp/>x0;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>m_CD.m_y0<sp/><sp/><sp/><sp/><sp/>=<sp/>y0;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>m_CD.m_theta0<sp/>=<sp/>theta0;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>m_CD.m_kappa0<sp/>=<sp/>k;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>m_CD.m_dk<sp/><sp/><sp/><sp/><sp/>=<sp/>dk;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>m_L<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>L;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>m_aabb_done<sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>m_aabb_triangles.clear();</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>ClothoidCurve::build_G1(</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/>x0,</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/>y0,</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/>theta0,</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/>x1,</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/>y1,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/>theta1,</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/>tol</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>m_aabb_done<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>m_aabb_triangles.clear();</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_CD.build_G1(<sp/>x0,<sp/>y0,<sp/>theta0,<sp/>x1,<sp/>y1,<sp/>theta1,<sp/>tol,<sp/>m_L<sp/>);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>ClothoidCurve::build_G1_D(</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/>x0,</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/>y0,</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/>theta0,</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/>x1,</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/>y1,</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/>theta1,</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/>L_D[2],</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/>k_D[2],</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/>dk_D[2],</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/>tol</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>m_aabb_done<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>m_aabb_triangles.clear();</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_CD.build_G1(<sp/>x0,<sp/>y0,<sp/>theta0,<sp/>x1,<sp/>y1,<sp/>theta1,<sp/>tol,<sp/>m_L,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>L_D,<sp/>k_D,<sp/>dk_D<sp/>);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>ClothoidCurve::build_forward(</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/>x0,</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/>y0,</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/>theta0,</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/>kappa0,</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/>x1,</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/>y1,</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/>tol</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>m_aabb_done<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>m_aabb_triangles.clear();</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_CD.build_forward(<sp/>x0,<sp/>y0,<sp/>theta0,<sp/>kappa0,<sp/>x1,<sp/>y1,<sp/>tol,<sp/>m_L<sp/>);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>ClothoidCurve::ClothoidCurve(<sp/>LineSegment<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>LS<sp/>)</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/>:<sp/>BaseCurve(<sp/>LS.name()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>m_CD.m_x0<sp/><sp/><sp/><sp/><sp/>=<sp/>LS.m_x0;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>m_CD.m_y0<sp/><sp/><sp/><sp/><sp/>=<sp/>LS.m_y0;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>m_CD.m_theta0<sp/>=<sp/>LS.m_theta0;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>m_CD.m_kappa0<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>m_CD.m_dk<sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>m_L<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>LS.m_L;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>ClothoidCurve::ClothoidCurve(<sp/>CircleArc<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>C<sp/>)</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>:<sp/>BaseCurve(<sp/>C.name()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>m_CD.m_x0<sp/><sp/><sp/><sp/><sp/>=<sp/>C.m_x0;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>m_CD.m_y0<sp/><sp/><sp/><sp/><sp/>=<sp/>C.m_y0;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>m_CD.m_theta0<sp/>=<sp/>C.m_theta0;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>m_CD.m_kappa0<sp/>=<sp/>C.m_k;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>m_CD.m_dk<sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>m_L<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>C.m_L;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>ClothoidCurve::ClothoidCurve(<sp/>BaseCurve<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>pC<sp/>)</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/>:<sp/>ClothoidCurve(<sp/>pC-&gt;name()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_clothoids_8hh_1a50b619e42946f472ff4030e0bbd74f2e" kindref="member">G2LIB_DEBUG_MESSAGE</ref>(<sp/></highlight><highlight class="stringliteral">&quot;ClothoidCurve<sp/>convert:<sp/>{}\n&quot;</highlight><highlight class="normal">,<sp/>pC-&gt;type_name()<sp/>);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<sp/>pC-&gt;type()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CurveType::LINE:</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_clothoids_8hh_1a50b619e42946f472ff4030e0bbd74f2e" kindref="member">G2LIB_DEBUG_MESSAGE</ref>(<sp/></highlight><highlight class="stringliteral">&quot;LineSegment<sp/>-&gt;<sp/>ClothoidCurve\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;build(<sp/>*</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">LineSegment<sp/></highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pC)<sp/>);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CurveType::CIRCLE:</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_clothoids_8hh_1a50b619e42946f472ff4030e0bbd74f2e" kindref="member">G2LIB_DEBUG_MESSAGE</ref>(<sp/></highlight><highlight class="stringliteral">&quot;CircleArc<sp/>-&gt;<sp/>ClothoidCurve\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;build(<sp/>*</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">CircleArc<sp/></highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pC)<sp/>);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CurveType::CLOTHOID:</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_clothoids_8hh_1a50b619e42946f472ff4030e0bbd74f2e" kindref="member">G2LIB_DEBUG_MESSAGE</ref>(<sp/></highlight><highlight class="stringliteral">&quot;ClothoidCurve<sp/>-&gt;<sp/>ClothoidCurve\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;copy(<sp/>*</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">ClothoidCurve<sp/></highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pC)<sp/>);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UTILS_ERROR(</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ClothoidList<sp/>constructor<sp/>cannot<sp/>convert<sp/>from:<sp/>{}\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pC-&gt;type_name()</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>ClothoidCurve::length_ISO(<sp/>real_type<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>UTILS_ERROR0(<sp/></highlight><highlight class="stringliteral">&quot;Offset<sp/>length<sp/>not<sp/>available<sp/>for<sp/>Clothoids\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//return<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>ClothoidCurve::optimized_sample_internal_ISO(</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s_begin,</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s_end,</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offs,</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ds,</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_angle,</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;real_type&gt;<sp/>&amp;<sp/>s</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>ss<sp/><sp/>=<sp/>s_begin;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>thh<sp/>=<sp/>theta(s_begin);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>integer<sp/>npts<sp/>=<sp/>0;<sp/>ss<sp/>&lt;<sp/>s_end;<sp/>++npts<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UTILS_ASSERT0(</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>npts<sp/>&lt;<sp/>100000000,</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ClothoidCurve::optimized_sample_internal<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;is<sp/>generating<sp/>too<sp/>much<sp/>points<sp/>(&gt;100000000)\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;something<sp/>is<sp/>going<sp/>wrong<sp/>or<sp/>parameters<sp/>are<sp/>not<sp/>well<sp/>set\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>estimate<sp/>angle<sp/>variation<sp/>and<sp/>compute<sp/>step<sp/>accodingly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>k<sp/><sp/><sp/>=<sp/>m_CD.kappa(<sp/>ss<sp/>);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>dss<sp/>=<sp/>ds/(1+k*offs);<sp/></highlight><highlight class="comment">//<sp/>scale<sp/>length<sp/>with<sp/>offset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>sss<sp/>=<sp/>ss<sp/>+<sp/>dss;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>sss<sp/>&gt;<sp/>s_end<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sss<sp/>=<sp/>s_end;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dss<sp/>=<sp/>s_end-ss;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>abs(k*dss)<sp/>&gt;<sp/>max_angle<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dss<sp/>=<sp/>abs(max_angle/k);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sss<sp/>=<sp/>ss<sp/>+<sp/>dss;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>and<sp/>recompute<sp/>if<sp/>necessary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>thhh<sp/>=<sp/>theta(sss);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>abs(thh-thhh)<sp/>&gt;<sp/>max_angle<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/><sp/><sp/><sp/>=<sp/>m_CD.kappa(<sp/>sss<sp/>);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dss<sp/><sp/>=<sp/>abs(max_angle/k);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sss<sp/><sp/>=<sp/>ss<sp/>+<sp/>dss;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thhh<sp/>=<sp/>theta(sss);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/><sp/>=<sp/>sss;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>thh<sp/>=<sp/>thhh;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s.emplace_back(ss);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>s.back()<sp/>=<sp/>s_end;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/>ClothoidCurve::optimized_sample_ISO(</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offs,</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>integer<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>npts,</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_angle,</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;real_type&gt;<sp/>&amp;<sp/>s</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>s.clear();</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>s.reserve(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">(npts)<sp/>);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>s.emplace_back(0);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>ds<sp/>=<sp/>m_L/npts;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_CD.m_kappa0*m_CD.m_dk<sp/>&gt;=<sp/>0<sp/>||<sp/>m_CD.kappa(m_L)*m_CD.m_dk<sp/>&lt;=<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>optimized_sample_internal_ISO(<sp/>0,<sp/>m_L,<sp/>offs,<sp/>ds,<sp/>max_angle,<sp/>s<sp/>);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>flex<sp/>inside,<sp/>split<sp/>clothoid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>sflex<sp/>=<sp/>-m_CD.m_kappa0/m_CD.m_dk;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>optimized_sample_internal_ISO(<sp/>0,<sp/><sp/><sp/>sflex,<sp/>offs,<sp/>ds,<sp/>max_angle,<sp/>s<sp/>);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>optimized_sample_internal_ISO(<sp/>sflex,<sp/>m_L,<sp/>offs,<sp/>ds,<sp/>max_angle,<sp/>s<sp/>);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*\</highlight></codeline>
<codeline lineno="393"><highlight class="comment"><sp/><sp/><sp/>|<sp/><sp/>_<sp/><sp/><sp/><sp/>_<sp/><sp/><sp/>_____<sp/><sp/><sp/><sp/>_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_</highlight></codeline>
<codeline lineno="394"><highlight class="comment"><sp/><sp/><sp/>|<sp/>|<sp/>|__|<sp/>|_|_<sp/><sp/><sp/>_|<sp/>_(_)__<sp/>_<sp/>_<sp/>_<sp/><sp/>__<sp/>_|<sp/>|___</highlight></codeline>
<codeline lineno="395"><highlight class="comment"><sp/><sp/><sp/>|<sp/>|<sp/>&apos;_<sp/>\<sp/>&apos;_<sp/>\|<sp/>||<sp/>&apos;_|<sp/>/<sp/>_`<sp/>|<sp/>&apos;<sp/>\/<sp/>_`<sp/>|<sp/>/<sp/>-_)</highlight></codeline>
<codeline lineno="396"><highlight class="comment"><sp/><sp/><sp/>|<sp/>|_.__/_.__/|_||_|<sp/>|_\__,_|_||_\__,<sp/>|_\___|</highlight></codeline>
<codeline lineno="397"><highlight class="comment"><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|___/</highlight></codeline>
<codeline lineno="398"><highlight class="comment"><sp/><sp/>\*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/>ClothoidCurve::bb_triangles_internal_ISO(</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offs,</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;Triangle2D&gt;<sp/>&amp;<sp/>tvec,</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s_begin,</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s_end,</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_angle,</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_size,</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>integer<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>icurve</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>one_degree<sp/>=<sp/>Utils::m_pi/180;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>ss<sp/><sp/>=<sp/>s_begin;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>thh<sp/>=<sp/>m_CD.theta(ss);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>MX<sp/><sp/>=<sp/>min(<sp/>m_L,<sp/>max_size<sp/>);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>integer<sp/>npts<sp/>=<sp/>0;<sp/>ss<sp/>&lt;<sp/>s_end;<sp/>++npts<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UTILS_ASSERT0(</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>npts<sp/>&lt;<sp/>100000000,</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ClothoidCurve::bb_triangles_internal<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;is<sp/>generating<sp/>too<sp/>much<sp/>triangles<sp/>(&gt;100000000)\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;something<sp/>is<sp/>going<sp/>wrong<sp/>or<sp/>parameters<sp/>are<sp/>not<sp/>well<sp/>set\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>estimate<sp/>angle<sp/>variation<sp/>and<sp/>compute<sp/>step<sp/>accodingly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>k<sp/><sp/><sp/>=<sp/>m_CD.kappa(<sp/>ss<sp/>);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>dss<sp/>=<sp/>MX/(1+k*offs);<sp/></highlight><highlight class="comment">//<sp/>scale<sp/>length<sp/>with<sp/>offset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>sss<sp/>=<sp/>ss<sp/>+<sp/>dss;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>sss<sp/>&gt;<sp/>s_end<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sss<sp/>=<sp/>s_end;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dss<sp/>=<sp/>s_end-ss;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>abs(k*dss)<sp/>&gt;<sp/>max_angle<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dss<sp/>=<sp/>abs(max_angle/k);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sss<sp/>=<sp/>ss<sp/>+<sp/>dss;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>and<sp/>recompute<sp/>if<sp/>necessary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>thhh<sp/>=<sp/>theta(sss);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>abs(thh-thhh)<sp/>&gt;<sp/>max_angle<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/><sp/><sp/><sp/>=<sp/>m_CD.kappa(<sp/>sss<sp/>);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dss<sp/><sp/>=<sp/>abs(max_angle/k);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sss<sp/><sp/>=<sp/>ss<sp/>+<sp/>dss;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thhh<sp/>=<sp/>theta(sss);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>x0,<sp/>y0,<sp/>x1,<sp/>y1;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_CD.eval_ISO(<sp/>ss,<sp/><sp/>offs,<sp/>x0,<sp/>y0<sp/>);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_CD.eval_ISO(<sp/>sss,<sp/>offs,<sp/>x1,<sp/>y1<sp/>);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>tx0<sp/><sp/><sp/>=<sp/>cos(thh);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>ty0<sp/><sp/><sp/>=<sp/>sin(thh);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>alpha<sp/>=<sp/>sss-ss;<sp/></highlight><highlight class="comment">//<sp/>se<sp/>angolo<sp/>troppo<sp/>piccolo<sp/>uso<sp/>approx<sp/>piu<sp/>rozza</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>abs(thh-thhh)<sp/>&gt;<sp/>one_degree<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>tx1<sp/>=<sp/>cos(thhh);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>ty1<sp/>=<sp/>sin(thhh);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>det<sp/>=<sp/>tx1<sp/>*<sp/>ty0<sp/>-<sp/>tx0<sp/>*<sp/>ty1;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>dx<sp/><sp/>=<sp/>x1-x0;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>dy<sp/><sp/>=<sp/>y1-y0;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alpha<sp/>=<sp/>(dy*tx1<sp/>-<sp/>dx*ty1)/det;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>x2<sp/>=<sp/>x0<sp/>+<sp/>alpha*tx0;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>y2<sp/>=<sp/>y0<sp/>+<sp/>alpha*ty0;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Triangle2D<sp/>t(<sp/>x0,<sp/>y0,<sp/>x2,<sp/>y2,<sp/>x1,<sp/>y1,<sp/>ss,<sp/>sss,<sp/>icurve<sp/>);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tvec.emplace_back(<sp/>t<sp/>);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/><sp/>=<sp/>sss;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>thh<sp/>=<sp/>thhh;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/>ClothoidCurve::bb_triangles_ISO(</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offs,</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;Triangle2D&gt;<sp/>&amp;<sp/>tvec,</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_angle,</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_size,</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>integer<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>icurve</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_CD.m_kappa0*m_CD.m_dk<sp/>&gt;=<sp/>0<sp/>||<sp/>m_CD.kappa(m_L)*m_CD.m_dk<sp/>&lt;=<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bb_triangles_internal_ISO(<sp/>offs,<sp/>tvec,<sp/>0,<sp/>m_L,<sp/>max_angle,<sp/>max_size,<sp/>icurve<sp/>);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>flex<sp/>inside,<sp/>split<sp/>clothoid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>sflex<sp/>=<sp/>-m_CD.m_kappa0/m_CD.m_dk;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bb_triangles_internal_ISO(<sp/>offs,<sp/>tvec,<sp/>0,<sp/><sp/><sp/>sflex,<sp/>max_angle,<sp/>max_size,<sp/>icurve<sp/>);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bb_triangles_internal_ISO(<sp/>offs,<sp/>tvec,<sp/>sflex,<sp/>m_L,<sp/>max_angle,<sp/>max_size,<sp/>icurve<sp/>);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*\</highlight></codeline>
<codeline lineno="496"><highlight class="comment"><sp/><sp/><sp/>|<sp/><sp/>___<sp/>___</highlight></codeline>
<codeline lineno="497"><highlight class="comment"><sp/><sp/><sp/>|<sp/>|<sp/>_<sp/>)<sp/>_<sp/>)<sp/>_____<sp/>__</highlight></codeline>
<codeline lineno="498"><highlight class="comment"><sp/><sp/><sp/>|<sp/>|<sp/>_<sp/>\<sp/>_<sp/>\/<sp/>_<sp/>\<sp/>\<sp/>/</highlight></codeline>
<codeline lineno="499"><highlight class="comment"><sp/><sp/><sp/>|<sp/>|___/___/\___/_\_\</highlight></codeline>
<codeline lineno="500"><highlight class="comment"><sp/><sp/>\*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/>ClothoidCurve::bbox_ISO(</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/><sp/><sp/>offs,</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/>&amp;<sp/>xmin,</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/>&amp;<sp/>ymin,</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/>&amp;<sp/>xmax,</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/>&amp;<sp/>ymax</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;Triangle2D&gt;<sp/>tvec;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>bb_triangles_ISO(<sp/>offs,<sp/>tvec,<sp/>Utils::m_pi/18,<sp/>1e100<sp/>);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>xmin<sp/>=<sp/>ymin<sp/>=<sp/>Utils::Inf&lt;real_type&gt;();</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>xmax<sp/>=<sp/>ymax<sp/>=<sp/>-xmin;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>T<sp/>:<sp/>tvec<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>T.x1()<sp/>&lt;<sp/>xmin<sp/>)<sp/>xmin<sp/>=<sp/>T.x1();</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>T.x1()<sp/>&gt;<sp/>xmax<sp/>)<sp/>xmax<sp/>=<sp/>T.x1();</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>T.x2()<sp/>&lt;<sp/>xmin<sp/>)<sp/>xmin<sp/>=<sp/>T.x2();</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>T.x2()<sp/>&gt;<sp/>xmax<sp/>)<sp/>xmax<sp/>=<sp/>T.x2();</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>T.x3()<sp/>&lt;<sp/>xmin<sp/>)<sp/>xmin<sp/>=<sp/>T.x3();</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>T.x3()<sp/>&gt;<sp/>xmax<sp/>)<sp/>xmax<sp/>=<sp/>T.x3();</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>T.y1()<sp/>&lt;<sp/>ymin<sp/>)<sp/>ymin<sp/>=<sp/>T.y1();</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>T.y1()<sp/>&gt;<sp/>ymax<sp/>)<sp/>ymax<sp/>=<sp/>T.y1();</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>T.y2()<sp/>&lt;<sp/>ymin<sp/>)<sp/>ymin<sp/>=<sp/>T.y2();</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>T.y2()<sp/>&gt;<sp/>ymax<sp/>)<sp/>ymax<sp/>=<sp/>T.y2();</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>T.y3()<sp/>&lt;<sp/>ymin<sp/>)<sp/>ymin<sp/>=<sp/>T.y3();</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>T.y3()<sp/>&gt;<sp/>ymax<sp/>)<sp/>ymax<sp/>=<sp/>T.y3();</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.<sp/>.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*\</highlight></codeline>
<codeline lineno="534"><highlight class="comment"><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_<sp/><sp/><sp/><sp/>____<sp/><sp/>____<sp/><sp/>_</highlight></codeline>
<codeline lineno="535"><highlight class="comment"><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>/<sp/>\<sp/><sp/><sp/><sp/><sp/><sp/>/<sp/>\<sp/><sp/>|<sp/>__<sp/>)|<sp/>__<sp/>)|<sp/>|_<sp/>_<sp/>__<sp/>___<sp/><sp/>___</highlight></codeline>
<codeline lineno="536"><highlight class="comment"><sp/><sp/><sp/>|<sp/><sp/><sp/>/<sp/>_<sp/>\<sp/><sp/><sp/><sp/>/<sp/>_<sp/>\<sp/>|<sp/><sp/>_<sp/>\|<sp/><sp/>_<sp/>\|<sp/>__|<sp/>&apos;__/<sp/>_<sp/>\/<sp/>_<sp/>\</highlight></codeline>
<codeline lineno="537"><highlight class="comment"><sp/><sp/><sp/>|<sp/><sp/>/<sp/>___<sp/>\<sp/><sp/>/<sp/>___<sp/>\|<sp/>|_)<sp/>|<sp/>|_)<sp/>|<sp/>|_|<sp/>|<sp/>|<sp/><sp/>__/<sp/><sp/>__/</highlight></codeline>
<codeline lineno="538"><highlight class="comment"><sp/><sp/><sp/>|<sp/>/_/<sp/><sp/><sp/>\_\/_/<sp/><sp/><sp/>\_\____/|____/<sp/>\__|_|<sp/><sp/>\___|\___|</highlight></codeline>
<codeline lineno="539"><highlight class="comment"><sp/><sp/>\*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>DOXYGEN_SHOULD_SKIP_THIS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/>ClothoidCurve::build_AABBtree_ISO(</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/>offs,</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/>max_angle,</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/>max_size</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifdef<sp/>CLOTHOIDS_USE_THREADS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lock(m_aabb_mutex);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_aabb_done<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Utils::is_zero(<sp/>offs-m_aabb_offs<sp/>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Utils::is_zero(<sp/>max_angle-m_aabb_max_angle<sp/>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Utils::is_zero(<sp/>max_size-m_aabb_max_size<sp/>)<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>bb_triangles_ISO(<sp/>offs,<sp/>m_aabb_triangles,<sp/>max_angle,<sp/>max_size<sp/>);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1a17146eb1606475bedc9a2d27f3b29e34" kindref="member">integer</ref><sp/>ipos{0};</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1a17146eb1606475bedc9a2d27f3b29e34" kindref="member">integer</ref><sp/>nobj{<sp/><ref refid="namespace_g2lib_1a17146eb1606475bedc9a2d27f3b29e34" kindref="member">integer</ref>(m_aabb_triangles.size())<sp/>};</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>m_aabb_tree.set_max_num_objects_per_node(<sp/>G2LIB_AABB_CUT<sp/>);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>m_aabb_tree.allocate(<sp/>nobj,<sp/>2<sp/>);<sp/></highlight><highlight class="comment">//<sp/>nbox,<sp/>space<sp/>dimension</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>bbox_min[2],<sp/>bbox_max[2];</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>clot<sp/>:<sp/>m_aabb_triangles<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>clot.bbox(<sp/>bbox_min[0],<sp/>bbox_min[1],<sp/>bbox_max[0],<sp/>bbox_max[1]<sp/>);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_aabb_tree.replace_bbox(<sp/>bbox_min,<sp/>bbox_max,<sp/>ipos<sp/>);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++ipos;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>m_aabb_tree.build();</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>m_aabb_done<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>m_aabb_offs<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>offs;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>m_aabb_max_angle<sp/>=<sp/>max_angle;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>m_aabb_max_size<sp/><sp/>=<sp/>max_size;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*\</highlight></codeline>
<codeline lineno="581"><highlight class="comment"><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_<sp/>_<sp/>_<sp/><sp/><sp/><sp/><sp/>_</highlight></codeline>
<codeline lineno="582"><highlight class="comment"><sp/><sp/><sp/>|<sp/><sp/><sp/>___<sp/>___<sp/>|<sp/>|<sp/>(_)___(_)<sp/>___<sp/><sp/>_<sp/>__</highlight></codeline>
<codeline lineno="583"><highlight class="comment"><sp/><sp/><sp/>|<sp/><sp/>/<sp/>__/<sp/>_<sp/>\|<sp/>|<sp/>|<sp/>/<sp/>__|<sp/>|/<sp/>_<sp/>\|<sp/>&apos;_<sp/>\</highlight></codeline>
<codeline lineno="584"><highlight class="comment"><sp/><sp/><sp/>|<sp/>|<sp/>(_|<sp/>(_)<sp/>|<sp/>|<sp/>|<sp/>\__<sp/>\<sp/>|<sp/>(_)<sp/>|<sp/>|<sp/>|<sp/>|</highlight></codeline>
<codeline lineno="585"><highlight class="comment"><sp/><sp/><sp/>|<sp/><sp/>\___\___/|_|_|_|___/_|\___/|_|<sp/>|_|</highlight></codeline>
<codeline lineno="586"><highlight class="comment"><sp/><sp/>\*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/>ClothoidCurve::collision_ISO(</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offs,</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/>ClothoidCurve<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>C,</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offs_C</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_clothoids_8hh_1a50b619e42946f472ff4030e0bbd74f2e" kindref="member">G2LIB_DEBUG_MESSAGE</ref>(</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ClothoidCurve::collision_ISO(<sp/>offs={},<sp/>C,<sp/>offs_C={}\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>offs,<sp/>offs_C</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_clothoid_8cc_1a4909e1a0c83314c6982b938f1c4d5c33" kindref="member">G2LIB_DEBUG_TICTOC</ref>;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_clothoid_8cc_1a2fff7467d646026b2e771d3e4cd55542" kindref="member">G2LIB_DEBUG_TIC</ref>;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;build_AABBtree_ISO(<sp/>offs<sp/>);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>C.build_AABBtree_ISO(<sp/>offs_C<sp/>);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_clothoid_8cc_1aafb2dc57b5fdd028efc50baf733fc66d" kindref="member">G2LIB_DEBUG_TOC</ref>;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_clothoids_8hh_1a50b619e42946f472ff4030e0bbd74f2e" kindref="member">G2LIB_DEBUG_MESSAGE</ref>(</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ClothoidCurve::collision_ISO(<sp/>offs={},<sp/>C,<sp/>offs_C={}<sp/>)<sp/>build_AABBtree_ISO<sp/>elapsed<sp/>{}ms\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>offs,<sp/>offs_C,<sp/>tictoc.elapsed_ms()</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_clothoid_8cc_1a2fff7467d646026b2e771d3e4cd55542" kindref="member">G2LIB_DEBUG_TIC</ref>;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1a5dd1788676dfa912a9389cd18ed753a5" kindref="member">AABB_MAP</ref><sp/>intersectList;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>m_aabb_tree.intersect_and_refine(<sp/>C.m_aabb_tree,<sp/>intersectList<sp/>);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_clothoid_8cc_1aafb2dc57b5fdd028efc50baf733fc66d" kindref="member">G2LIB_DEBUG_TOC</ref>;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_clothoids_8hh_1a50b619e42946f472ff4030e0bbd74f2e" kindref="member">G2LIB_DEBUG_MESSAGE</ref>(</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ClothoidCurve::collision_ISO<sp/>intersect_and_refine<sp/>elapsed<sp/>{}ms<sp/>candidated<sp/>#{}\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tictoc.elapsed_ms(),<sp/>intersectList.size()</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_clothoid_8cc_1a2fff7467d646026b2e771d3e4cd55542" kindref="member">G2LIB_DEBUG_TIC</ref>;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>collide<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>I<sp/>:<sp/>intersectList<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1a17146eb1606475bedc9a2d27f3b29e34" kindref="member">integer</ref><sp/>i<sp/>=<sp/>I.first;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UTILS_ASSERT_DEBUG(</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>i<sp/>&lt;<sp/><ref refid="namespace_g2lib_1a17146eb1606475bedc9a2d27f3b29e34" kindref="member">integer</ref>(m_aabb_triangles.size()),</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ClothoidCurve::collision_ISO(<sp/>offs={},<sp/>C,<sp/>offs_C={}<sp/>)<sp/>i={}<sp/>out<sp/>of<sp/>range<sp/>[0,{})\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offs,<sp/>offs_C,<sp/>i,<sp/>m_aabb_triangles.size()</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Triangle2D<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>T1<sp/>=<sp/>m_aabb_triangles.at(i);</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>integer<sp/>j<sp/>:<sp/>I.second<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UTILS_ASSERT_DEBUG(</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>j<sp/>&lt;<sp/><ref refid="namespace_g2lib_1a17146eb1606475bedc9a2d27f3b29e34" kindref="member">integer</ref>(C.m_aabb_triangles.size()),</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ClothoidCurve::collision_ISO(<sp/>offs={},<sp/>C,<sp/>offs_C={}<sp/>)<sp/>j={}<sp/>out<sp/>of<sp/>range<sp/>[0,{})\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offs,<sp/>offs_C,<sp/>j,<sp/>C.m_aabb_triangles.size()</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Triangle2D<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>T2<sp/>=<sp/>C.m_aabb_triangles.at(j);</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>ss1,<sp/>ss2;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>collide<sp/>=<sp/>this-&gt;aabb_intersect_ISO(<sp/>T1,<sp/>offs,<sp/>&amp;C,<sp/>T2,<sp/>offs_C,<sp/>ss1,<sp/>ss2<sp/>);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>collide<sp/>)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>collide<sp/>)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_clothoid_8cc_1aafb2dc57b5fdd028efc50baf733fc66d" kindref="member">G2LIB_DEBUG_TOC</ref>;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_clothoids_8hh_1a50b619e42946f472ff4030e0bbd74f2e" kindref="member">G2LIB_DEBUG_MESSAGE</ref>(</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ClothoidCurve<sp/>collision_ISO:<sp/>collisions<sp/>elapsed<sp/>{}ms\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tictoc.elapsed_ms()</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>collide;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/>ClothoidCurve::approximate_collision_ISO(</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offs,</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>ClothoidCurve<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>C,</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offs_C,</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_angle,</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_size</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;build_AABBtree_ISO(<sp/>offs,<sp/>max_angle,<sp/>max_size<sp/>);</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>C.build_AABBtree_ISO(<sp/>offs_C,<sp/>max_angle,<sp/>max_size<sp/>);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1a5dd1788676dfa912a9389cd18ed753a5" kindref="member">AABB_MAP</ref><sp/>intersectList;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/>m_aabb_tree.intersect_and_refine(<sp/>C.m_aabb_tree,<sp/>intersectList<sp/>);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>I<sp/>:<sp/>intersectList<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1a17146eb1606475bedc9a2d27f3b29e34" kindref="member">integer</ref><sp/>i<sp/>=<sp/>I.first;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UTILS_ASSERT_DEBUG(</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>i<sp/>&lt;<sp/><ref refid="namespace_g2lib_1a17146eb1606475bedc9a2d27f3b29e34" kindref="member">integer</ref>(m_aabb_triangles.size()),</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ClothoidCurve::collision_ISO(<sp/>offs={},<sp/>C,<sp/>offs_C={}<sp/>)<sp/>i={}<sp/>out<sp/>of<sp/>range<sp/>[0,{})\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offs,<sp/>offs_C,<sp/>i,<sp/>m_aabb_triangles.size()</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Triangle2D<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>T1<sp/>=<sp/>m_aabb_triangles.at(i);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>integer<sp/>j<sp/>:<sp/>I.second<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UTILS_ASSERT_DEBUG(</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>j<sp/>&lt;<sp/><ref refid="namespace_g2lib_1a17146eb1606475bedc9a2d27f3b29e34" kindref="member">integer</ref>(C.m_aabb_triangles.size()),</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ClothoidCurve::collision_ISO(<sp/>offs={},<sp/>C,<sp/>offs_C={}<sp/>)<sp/>j={}<sp/>out<sp/>of<sp/>range<sp/>[0,{})\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offs,<sp/>offs_C,<sp/>j,<sp/>C.m_aabb_triangles.size()</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Triangle2D<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>T2<sp/>=<sp/>C.m_aabb_triangles.at(j);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>collide<sp/>=<sp/>T1.overlap(T2);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>collide<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/>ClothoidCurve::collision(<sp/>BaseCurve<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>pC<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pC-&gt;type()<sp/>==<sp/>CurveType::CLOTHOID<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ClothoidCurve<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>C<sp/>=<sp/>*</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">ClothoidCurve<sp/></highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pC);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="namespace_g2lib_1af81d254ff4ea6cce1b7c48a00c03d85a" kindref="member">collision</ref>(<sp/>C<sp/>);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ClothoidCurve<sp/>C(pC);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="namespace_g2lib_1af81d254ff4ea6cce1b7c48a00c03d85a" kindref="member">collision</ref>(<sp/>C<sp/>);</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/>ClothoidCurve::collision_ISO(</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offs,</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/>BaseCurve<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>pC,</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offs_C</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pC-&gt;type()<sp/>==<sp/>CurveType::CLOTHOID<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ClothoidCurve<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>C<sp/>=<sp/>*</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">ClothoidCurve<sp/></highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pC);</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="namespace_g2lib_1aead6910e9881df3e527df27f52443eb2" kindref="member">collision_ISO</ref>(<sp/>offs,<sp/>C,<sp/>offs_C<sp/>);</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1ac18621126b9485db2bc878d6a1c8b0c9" kindref="member">CurveType</ref><sp/>CT<sp/>=<sp/><ref refid="namespace_g2lib_1a10b486198edf32e38559a8310723f5ba" kindref="member">curve_promote</ref>(<sp/>this-&gt;type(),<sp/>pC-&gt;type()<sp/>);</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>CT<sp/>==<sp/>CurveType::CLOTHOID<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClothoidCurve<sp/>C(pC);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="namespace_g2lib_1aead6910e9881df3e527df27f52443eb2" kindref="member">collision_ISO</ref>(<sp/>offs,<sp/>C,<sp/>offs_C<sp/>);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_g2lib_1aead6910e9881df3e527df27f52443eb2" kindref="member">G2lib::collision_ISO</ref>(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>offs,<sp/>pC,<sp/>offs_C<sp/>);</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*\</highlight></codeline>
<codeline lineno="743"><highlight class="comment"><sp/><sp/><sp/>|<sp/><sp/>_<sp/><sp/><sp/><sp/><sp/><sp/><sp/>_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_</highlight></codeline>
<codeline lineno="744"><highlight class="comment"><sp/><sp/><sp/>|<sp/>(_)_<sp/>__<sp/>|<sp/>|_<sp/>___<sp/>_<sp/>__<sp/>___<sp/><sp/>___<sp/><sp/>___|<sp/>|_</highlight></codeline>
<codeline lineno="745"><highlight class="comment"><sp/><sp/><sp/>|<sp/>|<sp/>|<sp/>&apos;_<sp/>\|<sp/>__/<sp/>_<sp/>\<sp/>&apos;__/<sp/>__|/<sp/>_<sp/>\/<sp/>__|<sp/>__|</highlight></codeline>
<codeline lineno="746"><highlight class="comment"><sp/><sp/><sp/>|<sp/>|<sp/>|<sp/>|<sp/>|<sp/>|<sp/>||<sp/><sp/>__/<sp/>|<sp/><sp/>\__<sp/>\<sp/><sp/>__/<sp/>(__|<sp/>|_</highlight></codeline>
<codeline lineno="747"><highlight class="comment"><sp/><sp/><sp/>|<sp/>|_|_|<sp/>|_|\__\___|_|<sp/><sp/>|___/\___|\___|\__|</highlight></codeline>
<codeline lineno="748"><highlight class="comment"><sp/><sp/>\*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/>ClothoidCurve::aabb_intersect_ISO(</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/>Triangle2D<sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>T1,</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offs,</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/>ClothoidCurve<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>pC,</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/>Triangle2D<sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>T2,</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offs_C,</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>ss1,</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>ss2</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>eps1<sp/><sp/><sp/>=<sp/><ref refid="namespace_g2lib_1a4e46ee577d28382a45d279842036eb86" kindref="member">machepsi1000</ref>*m_L;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>eps2<sp/><sp/><sp/>=<sp/><ref refid="namespace_g2lib_1a4e46ee577d28382a45d279842036eb86" kindref="member">machepsi1000</ref>*pC-&gt;m_L;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>s1_min<sp/>=<sp/>T1.S0()-eps1;</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>s1_max<sp/>=<sp/>T1.S1()+eps1;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>s2_min<sp/>=<sp/>T2.S0()-eps2;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>s2_max<sp/>=<sp/>T2.S1()+eps2;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1a17146eb1606475bedc9a2d27f3b29e34" kindref="member">integer</ref><sp/><sp/><sp/>nout<sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>converged<sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/>ss1<sp/>=<sp/>(s1_min+s1_max)/2;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/>ss2<sp/>=<sp/>(s2_min+s2_max)/2;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>integer<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m_max_iter<sp/>&amp;&amp;<sp/>!converged;<sp/>++i<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>t1[2],<sp/>t2[2],<sp/>p1[2],<sp/>p2[2];</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_CD.eval_ISO<sp/><sp/>(<sp/>ss1,<sp/>offs,<sp/>p1[0],<sp/>p1[1]<sp/>);</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_CD.eval_ISO_D(<sp/>ss1,<sp/>offs,<sp/>t1[0],<sp/>t1[1]<sp/>);</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pC-&gt;m_CD.eval_ISO<sp/><sp/>(<sp/>ss2,<sp/>offs_C,<sp/>p2[0],<sp/>p2[1]<sp/>);</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pC-&gt;m_CD.eval_ISO_D(<sp/>ss2,<sp/>offs_C,<sp/>t2[0],<sp/>t2[1]<sp/>);</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="780"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>risolvo<sp/>il<sp/>sistema</highlight></codeline>
<codeline lineno="781"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>p1<sp/>+<sp/>alpha<sp/>*<sp/>t1<sp/>=<sp/>p2<sp/>+<sp/>beta<sp/>*<sp/>t2</highlight></codeline>
<codeline lineno="782"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>alpha<sp/>*<sp/>t1<sp/>-<sp/>beta<sp/>*<sp/>t2<sp/>=<sp/>p2<sp/>-<sp/>p1</highlight></codeline>
<codeline lineno="783"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight></codeline>
<codeline lineno="784"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/><sp/>/<sp/>t1[0]<sp/>-t2[0]<sp/>\<sp/>/<sp/>alpha<sp/>\<sp/>=<sp/>/<sp/>p2[0]<sp/>-<sp/>p1[0]<sp/>\</highlight></codeline>
<codeline lineno="785"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/><sp/>\<sp/>t1[1]<sp/>-t2[1]<sp/>/<sp/>\<sp/>beta<sp/><sp/>/<sp/><sp/><sp/>\<sp/>p2[1]<sp/>-<sp/>p1[1]<sp/>/</highlight></codeline>
<codeline lineno="786"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>det<sp/>=<sp/>t2[0]*t1[1]-t1[0]*t2[1];</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>px<sp/><sp/>=<sp/>p2[0]-p1[0];</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>py<sp/><sp/>=<sp/>p2[1]-p1[1];</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ss1<sp/>+=<sp/>(py*t2[0]<sp/>-<sp/>px*t2[1])/det;</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ss2<sp/>+=<sp/>(t1[0]*py<sp/>-<sp/>t1[1]*px)/det;</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!<sp/>(<sp/>isfinite(ss1)<sp/>&amp;&amp;<sp/>isfinite(ss1)<sp/>)<sp/>)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>out<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>ss1<sp/>&lt;<sp/>s1_min<sp/>)<sp/>{<sp/>out<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>ss1<sp/>=<sp/>s1_min;<sp/>}</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ss1<sp/>&gt;<sp/>s1_max<sp/>)<sp/>{<sp/>out<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>ss1<sp/>=<sp/>s1_max;<sp/>}</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>ss2<sp/>&lt;<sp/>s2_min<sp/>)<sp/>{<sp/>out<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>ss2<sp/>=<sp/>s2_min;<sp/>}</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ss2<sp/>&gt;<sp/>s2_max<sp/>)<sp/>{<sp/>out<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>ss2<sp/>=<sp/>s2_max;<sp/>}</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>out<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>++nout<sp/>&gt;<sp/>3<sp/>)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>converged<sp/>=<sp/>abs(px)<sp/>&lt;=<sp/>m_tolerance<sp/>&amp;&amp;<sp/>abs(py)<sp/>&lt;=<sp/>m_tolerance;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>converged<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>ss1<sp/>&lt;<sp/>T1.S0()<sp/>)<sp/>ss1<sp/>=<sp/>T1.S0();</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ss1<sp/>&gt;<sp/>T1.S1()<sp/>)<sp/>ss1<sp/>=<sp/>T1.S1();</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>ss2<sp/>&lt;<sp/>T2.S0()<sp/>)<sp/>ss2<sp/>=<sp/>T2.S0();</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ss2<sp/>&gt;<sp/>T2.S1()<sp/>)<sp/>ss2<sp/>=<sp/>T2.S1();</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>converged;</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/>ClothoidCurve::intersect_ISO(</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offs,</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/>ClothoidCurve<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>C,</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offs_C,</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/>IntersectList<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>ilist</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>ss1,<sp/>ss2;</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_clothoid_8cc_1a4909e1a0c83314c6982b938f1c4d5c33" kindref="member">G2LIB_DEBUG_TICTOC</ref>;</highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>intersect_with_AABBtree<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_clothoid_8cc_1a2fff7467d646026b2e771d3e4cd55542" kindref="member">G2LIB_DEBUG_TIC</ref>;</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;build_AABBtree_ISO(<sp/>offs<sp/>);</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>C.build_AABBtree_ISO(<sp/>offs_C<sp/>);</highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_clothoid_8cc_1aafb2dc57b5fdd028efc50baf733fc66d" kindref="member">G2LIB_DEBUG_TOC</ref>;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_clothoids_8hh_1a50b619e42946f472ff4030e0bbd74f2e" kindref="member">G2LIB_DEBUG_MESSAGE</ref>(</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ClothoidCurve<sp/>intersect_ISO:<sp/>build_AABBtree_ISO<sp/>elapsed<sp/>{}ms\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tictoc.elapsed_ms()</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_clothoid_8cc_1a2fff7467d646026b2e771d3e4cd55542" kindref="member">G2LIB_DEBUG_TIC</ref>;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1a5dd1788676dfa912a9389cd18ed753a5" kindref="member">AABB_MAP</ref><sp/>intersectList;</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_aabb_tree.intersect_and_refine(<sp/>C.m_aabb_tree,<sp/>intersectList<sp/>);</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_clothoid_8cc_1aafb2dc57b5fdd028efc50baf733fc66d" kindref="member">G2LIB_DEBUG_TOC</ref>;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_clothoids_8hh_1a50b619e42946f472ff4030e0bbd74f2e" kindref="member">G2LIB_DEBUG_MESSAGE</ref>(</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ClothoidCurve<sp/>intersect_ISO:<sp/>intersect_and_refine<sp/>elapsed<sp/>{}ms<sp/>candidated<sp/>#{}\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tictoc.elapsed_ms(),<sp/>intersectList.size()</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_clothoid_8cc_1a2fff7467d646026b2e771d3e4cd55542" kindref="member">G2LIB_DEBUG_TIC</ref>;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>I<sp/>:<sp/>intersectList<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1a17146eb1606475bedc9a2d27f3b29e34" kindref="member">integer</ref><sp/>i<sp/>=<sp/>I.first;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UTILS_ASSERT_DEBUG(</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>i<sp/>&lt;<sp/><ref refid="namespace_g2lib_1a17146eb1606475bedc9a2d27f3b29e34" kindref="member">integer</ref>(m_aabb_triangles.size()),</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ClothoidCurve::intersect_ISO(<sp/>offs={},<sp/>C,<sp/>offs_C={},<sp/>ilist<sp/>)<sp/>i={}<sp/>out<sp/>of<sp/>range<sp/>[0,{})\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offs,<sp/>offs_C,<sp/>i,<sp/>m_aabb_triangles.size()</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Triangle2D<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>T1<sp/>=<sp/>m_aabb_triangles.at(i);</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>integer<sp/>j<sp/>:<sp/>I.second<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UTILS_ASSERT_DEBUG(</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>j<sp/>&lt;<sp/><ref refid="namespace_g2lib_1a17146eb1606475bedc9a2d27f3b29e34" kindref="member">integer</ref>(C.m_aabb_triangles.size()),</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ClothoidCurve::intersect_ISO(<sp/>offs={},<sp/>C,<sp/>offs_C={},<sp/>ilist<sp/>)<sp/>j={}<sp/>out<sp/>of<sp/>range<sp/>[0,{})\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offs,<sp/>offs_C,<sp/>j,<sp/>C.m_aabb_triangles.size()</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Triangle2D<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>T2<sp/>=<sp/>C.m_aabb_triangles.at(j);</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>converged<sp/>=<sp/>aabb_intersect_ISO(<sp/>T1,<sp/>offs,<sp/>&amp;C,<sp/>T2,<sp/>offs_C,<sp/>ss1,<sp/>ss2<sp/>);</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>converged<sp/>)<sp/>ilist.emplace_back(<sp/>ss1,<sp/>ss2<sp/>);</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_clothoid_8cc_1aafb2dc57b5fdd028efc50baf733fc66d" kindref="member">G2LIB_DEBUG_TOC</ref>;</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_clothoids_8hh_1a50b619e42946f472ff4030e0bbd74f2e" kindref="member">G2LIB_DEBUG_MESSAGE</ref>(</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ClothoidCurve<sp/>intersect_ISO:<sp/>intersections<sp/>elapsed<sp/>{}ms<sp/>candidated<sp/>#{}\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tictoc.elapsed_ms(),<sp/>intersectList.size()</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_clothoid_8cc_1a2fff7467d646026b2e771d3e4cd55542" kindref="member">G2LIB_DEBUG_TIC</ref>;</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bb_triangles_ISO(<sp/>offs,<sp/>m_aabb_triangles,<sp/>Utils::m_pi/18,<sp/>1e100<sp/>);</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>C.bb_triangles_ISO(<sp/>offs_C,<sp/>C.m_aabb_triangles,<sp/>Utils::m_pi/18,<sp/>1e100<sp/>);</highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>Triangle2D<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>T1<sp/>:<sp/>m_aabb_triangles<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>Triangle2D<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>T2<sp/>:<sp/>C.m_aabb_triangles<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>converged<sp/>=<sp/>aabb_intersect_ISO(<sp/>T1,<sp/>offs,<sp/>&amp;C,<sp/>T2,<sp/>offs_C,<sp/>ss1,<sp/>ss2<sp/>);</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>converged<sp/>)<sp/>ilist.emplace_back(<sp/>ss1,<sp/>ss2<sp/>);</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_clothoid_8cc_1aafb2dc57b5fdd028efc50baf733fc66d" kindref="member">G2LIB_DEBUG_TOC</ref>;</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_clothoids_8hh_1a50b619e42946f472ff4030e0bbd74f2e" kindref="member">G2LIB_DEBUG_MESSAGE</ref>(</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ClothoidCurve<sp/>intersect_ISO:<sp/>intersections<sp/>elapsed<sp/>{}ms<sp/>noAABB<sp/>tree\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tictoc.elapsed_ms()</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/>ClothoidCurve::intersect(</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/>BaseCurve<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>pC,</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/>IntersectList<sp/><sp/><sp/>&amp;<sp/>ilist</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pC-&gt;type()<sp/>==<sp/>CurveType::CLOTHOID<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ClothoidCurve<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>C<sp/>=<sp/>*</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">ClothoidCurve<sp/></highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pC);</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="namespace_g2lib_1a4469ac140b9f1b90f6099de471ecbb6f" kindref="member">intersect</ref>(<sp/>C,<sp/>ilist<sp/>);</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ClothoidCurve<sp/>C(pC);</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="namespace_g2lib_1a4469ac140b9f1b90f6099de471ecbb6f" kindref="member">intersect</ref>(<sp/>C,<sp/>ilist<sp/>);</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/>ClothoidCurve::intersect_ISO(</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offs,</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/>BaseCurve<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>pC,</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offs_C,</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/>IntersectList<sp/><sp/><sp/>&amp;<sp/>ilist</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pC-&gt;type()<sp/>==<sp/>CurveType::CLOTHOID<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ClothoidCurve<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>C<sp/>=<sp/>*</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">ClothoidCurve<sp/></highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pC);</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="namespace_g2lib_1a19f5a247d2b7e5e7dc9cc62275c13d44" kindref="member">intersect_ISO</ref>(<sp/>offs,<sp/>C,<sp/>offs_C,<sp/>ilist<sp/>);</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ClothoidCurve<sp/>C(pC);</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="namespace_g2lib_1a19f5a247d2b7e5e7dc9cc62275c13d44" kindref="member">intersect_ISO</ref>(<sp/>offs,<sp/>C,<sp/>offs_C,<sp/>ilist<sp/>);</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="924"><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*\</highlight></codeline>
<codeline lineno="926"><highlight class="comment"><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_<sp/><sp/><sp/>____<sp/><sp/><sp/><sp/><sp/><sp/><sp/>_<sp/><sp/><sp/><sp/><sp/><sp/><sp/>_</highlight></codeline>
<codeline lineno="927"><highlight class="comment"><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>___|<sp/>|<sp/>___<sp/><sp/>___<sp/><sp/>___<sp/><sp/>___|<sp/>|_|<sp/><sp/>_<sp/>\<sp/>___<sp/>(_)_<sp/>__<sp/>|<sp/>|_</highlight></codeline>
<codeline lineno="928"><highlight class="comment"><sp/><sp/><sp/>|<sp/><sp/><sp/>/<sp/>__|<sp/>|/<sp/>_<sp/>\/<sp/>__|/<sp/>_<sp/>\/<sp/>__|<sp/>__|<sp/>|_)<sp/>/<sp/>_<sp/>\|<sp/>|<sp/>&apos;_<sp/>\|<sp/>__|</highlight></codeline>
<codeline lineno="929"><highlight class="comment"><sp/><sp/><sp/>|<sp/><sp/>|<sp/>(__|<sp/>|<sp/>(_)<sp/>\__<sp/>\<sp/><sp/>__/\__<sp/>\<sp/>|_|<sp/><sp/>__/<sp/>(_)<sp/>|<sp/>|<sp/>|<sp/>|<sp/>|<sp/>|_</highlight></codeline>
<codeline lineno="930"><highlight class="comment"><sp/><sp/><sp/>|<sp/><sp/><sp/>\___|_|\___/|___/\___||___/\__|_|<sp/><sp/><sp/>\___/|_|_|<sp/>|_|\__|</highlight></codeline>
<codeline lineno="931"><highlight class="comment"><sp/><sp/>\*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/>ClothoidCurve::closest_point_internal(</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/><sp/><sp/>s_begin,</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/><sp/><sp/>s_end,</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/><sp/><sp/>qx,</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/><sp/><sp/>qy,</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/><sp/><sp/>offs,</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/>&amp;<sp/>x,</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/>&amp;<sp/>y,</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/>&amp;<sp/>s,</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/>&amp;<sp/>dst</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>minimize<sp/>using<sp/>circle<sp/>approximation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/>(s_begin<sp/>+<sp/>s_end)/2;</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1a17146eb1606475bedc9a2d27f3b29e34" kindref="member">integer</ref><sp/>nout{0};</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1a17146eb1606475bedc9a2d27f3b29e34" kindref="member">integer</ref><sp/>n_ok{0};</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>integer<sp/>iter<sp/>=<sp/>0;<sp/>iter<sp/>&lt;<sp/>m_max_iter;<sp/>++iter<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>osculating<sp/>circle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_CD.eval_ISO(<sp/>s,<sp/>offs,<sp/>x,<sp/>y<sp/>);</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>th<sp/>=<sp/>m_CD.theta(<sp/>s<sp/>);</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>kk<sp/>=<sp/>m_CD.kappa(<sp/>s<sp/>);</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>sc<sp/>=<sp/>1+kk*offs;</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>ds<sp/>=<sp/><ref refid="namespace_g2lib_1a8829b54b63a6e1880f15ccdfe57c2ecb" kindref="member">projectPointOnCircle</ref>(<sp/>x,<sp/>y,<sp/>th,<sp/>kk/sc,<sp/>qx,<sp/>qy<sp/>)/sc;</highlight></codeline>
<codeline lineno="957"><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>+=<sp/>ds;</highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>out<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>s<sp/>&lt;=<sp/>s_begin<sp/>)<sp/>{<sp/>out<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>s<sp/>=<sp/>s_begin;<sp/>}</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>s<sp/>&gt;=<sp/>s_end<sp/><sp/><sp/>)<sp/>{<sp/>out<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>s<sp/>=<sp/>s_end;<sp/>}</highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>out<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>++nout<sp/>&gt;<sp/>3<sp/>)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>force<sp/>one<sp/>more<sp/>itaration<sp/>to<sp/>improve<sp/>accuracy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>abs(ds)<sp/>&lt;=<sp/>m_tolerance<sp/>&amp;&amp;<sp/>++n_ok<sp/>&gt;=<sp/>2<sp/>)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/>dst<sp/>=<sp/>hypot(<sp/>qx-x,<sp/>qy-y<sp/>);</highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>ds<sp/>=<sp/>(s_end-s_begin)/10;</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>integer<sp/>iter<sp/>=<sp/>0;<sp/>iter<sp/>&lt;=<sp/>10;<sp/>++iter<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>ss<sp/>=<sp/>s_begin<sp/>+<sp/>iter<sp/>*<sp/>ds;</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>xx,<sp/>yy;</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CD.eval(<sp/>ss,<sp/>offs,<sp/>xx,<sp/>yy<sp/>);</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>dx<sp/>=<sp/>xx-qx;</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>dy<sp/>=<sp/>yy-qy;</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>dst1<sp/>=<sp/>hypot(<sp/>dx,<sp/>dy<sp/>);</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>dst1<sp/>&lt;<sp/>dst<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/><sp/><sp/>=<sp/>ss;</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/><sp/><sp/>=<sp/>xx;</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/><sp/><sp/>=<sp/>yy;</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst<sp/>=<sp/>dst1;</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="988"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/>ClothoidCurve::closest_point_internal(</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/><sp/><sp/>qx,</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/><sp/><sp/>qy,</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/><sp/><sp/>offs,</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/>&amp;<sp/>x,</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/>&amp;<sp/>y,</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/>&amp;<sp/>s,</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/>&amp;<sp/>DST</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_clothoid_8cc_1a4909e1a0c83314c6982b938f1c4d5c33" kindref="member">G2LIB_DEBUG_TICTOC</ref>;</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_clothoid_8cc_1a2fff7467d646026b2e771d3e4cd55542" kindref="member">G2LIB_DEBUG_TIC</ref>;</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>xx,<sp/>yy,<sp/>ss;</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;build_AABBtree_ISO(<sp/>offs<sp/>);</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/>DST<sp/>=<sp/>Utils::Inf&lt;real_type&gt;();</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_clothoid_8cc_1aafb2dc57b5fdd028efc50baf733fc66d" kindref="member">G2LIB_DEBUG_TOC</ref>;</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_clothoids_8hh_1a50b619e42946f472ff4030e0bbd74f2e" kindref="member">G2LIB_DEBUG_MESSAGE</ref>(</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ClothoidCurve::closest_point_internal:<sp/>build_AABBtree_ISO<sp/>elapsed<sp/>{}ms\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tictoc.elapsed_ms()</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_aabb_tree.num_tree_nodes()<sp/>&gt;<sp/>G2LIB_AABB_MIN_NODES<sp/>&amp;&amp;<sp/>intersect_with_AABBtree<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"></highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_clothoid_8cc_1a2fff7467d646026b2e771d3e4cd55542" kindref="member">G2LIB_DEBUG_TIC</ref>;</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1a5f1ad3dfe878836c222addf6619be7b6" kindref="member">AABB_SET</ref><sp/>candidateList;</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>xy[2]<sp/>=<sp/>{<sp/>qx,<sp/>qy<sp/>};</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_aabb_tree.min_distance_candidates(<sp/>xy,<sp/>candidateList<sp/>);</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_clothoid_8cc_1aafb2dc57b5fdd028efc50baf733fc66d" kindref="member">G2LIB_DEBUG_TOC</ref>;</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_clothoids_8hh_1a50b619e42946f472ff4030e0bbd74f2e" kindref="member">G2LIB_DEBUG_MESSAGE</ref>(</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ClothoidCurve::closest_point_internal<sp/>min_distance_candidates<sp/>elapsed<sp/>{}ms<sp/>candidated<sp/>#{}\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tictoc.elapsed_ms(),<sp/>candidateList.size()</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UTILS_ASSERT0(</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>candidateList.size()<sp/>&gt;<sp/>0,</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ClothoidCurve::closest_point_internal<sp/>no<sp/>candidate\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_clothoid_8cc_1a2fff7467d646026b2e771d3e4cd55542" kindref="member">G2LIB_DEBUG_TIC</ref>;</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>integer<sp/>ipos<sp/>:<sp/>candidateList<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UTILS_ASSERT_DEBUG(</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ipos<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>ipos<sp/>&lt;<sp/><ref refid="namespace_g2lib_1a17146eb1606475bedc9a2d27f3b29e34" kindref="member">integer</ref>(m_aabb_triangles.size()),</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ClothoidCurve::closest_point_internal(<sp/>qx={},<sp/>qy={},<sp/>offs={},<sp/>x,<sp/>y,<sp/>s,<sp/>DST<sp/>)<sp/>ipos={}<sp/>out<sp/>of<sp/>range<sp/>[0,{})\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qx,<sp/>qy,<sp/>offs,<sp/>ipos,<sp/>m_aabb_triangles.size()</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Triangle2D<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>T<sp/>=<sp/>m_aabb_triangles.at(ipos);</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>dst<sp/>=<sp/>T.dist_min(<sp/>qx,<sp/>qy<sp/>);</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>dst<sp/>&lt;<sp/>DST<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>refine<sp/>distance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>closest_point_internal(<sp/>T.S0(),<sp/>T.S1(),<sp/>qx,<sp/>qy,<sp/>offs,<sp/>xx,<sp/>yy,<sp/>ss,<sp/>dst<sp/>);</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>dst<sp/>&lt;<sp/>DST<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DST<sp/>=<sp/>dst;</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/><sp/><sp/>=<sp/>ss;</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/><sp/><sp/>=<sp/>xx;</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/><sp/><sp/>=<sp/>yy;</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_clothoid_8cc_1aafb2dc57b5fdd028efc50baf733fc66d" kindref="member">G2LIB_DEBUG_TOC</ref>;</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_clothoids_8hh_1a50b619e42946f472ff4030e0bbd74f2e" kindref="member">G2LIB_DEBUG_MESSAGE</ref>(</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ClothoidCurve::closest_point_internal<sp/>minimize<sp/>elapsed<sp/>{}ms\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tictoc.elapsed_ms()</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_clothoid_8cc_1a2fff7467d646026b2e771d3e4cd55542" kindref="member">G2LIB_DEBUG_TIC</ref>;</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>Triangle2D<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>T<sp/>:<sp/>m_aabb_triangles<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>dst<sp/>=<sp/>T.dist_min(<sp/>qx,<sp/>qy<sp/>);</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>dst<sp/>&lt;<sp/>DST<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>refine<sp/>distance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>closest_point_internal(<sp/>T.S0(),<sp/>T.S1(),<sp/>qx,<sp/>qy,<sp/>offs,<sp/>xx,<sp/>yy,<sp/>ss,<sp/>dst<sp/>);</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>dst<sp/>&lt;<sp/>DST<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DST<sp/>=<sp/>dst;</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/><sp/><sp/>=<sp/>ss;</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/><sp/><sp/>=<sp/>xx;</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/><sp/><sp/>=<sp/>yy;</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_clothoid_8cc_1aafb2dc57b5fdd028efc50baf733fc66d" kindref="member">G2LIB_DEBUG_TOC</ref>;</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_clothoids_8hh_1a50b619e42946f472ff4030e0bbd74f2e" kindref="member">G2LIB_DEBUG_MESSAGE</ref>(</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ClothoidCurve::closest_point_internal<sp/>minimize<sp/>elapsed<sp/>{}ms<sp/>(no<sp/>AABB<sp/>tree)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tictoc.elapsed_ms()</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><ref refid="namespace_g2lib_1a17146eb1606475bedc9a2d27f3b29e34" kindref="member">integer</ref></highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/>ClothoidCurve::closest_point_ISO(</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/><sp/><sp/>qx,</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/><sp/><sp/>qy,</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/><sp/><sp/>offs,</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/>&amp;<sp/>x,</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/>&amp;<sp/>y,</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/>&amp;<sp/>s,</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/>&amp;<sp/>t,</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/>real_type<sp/>&amp;<sp/>DST</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"></highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;closest_point_internal(<sp/>qx,<sp/>qy,<sp/>offs,<sp/>x,<sp/>y,<sp/>s,<sp/>DST<sp/>);</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"></highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>projection<sp/>is<sp/>orthogonal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/><ref refid="_base_curve__compatibility_8hxx_1a0823ad2cb05b7e1c773361d49f95bad8" kindref="member">nx</ref>,<sp/><ref refid="_base_curve__compatibility_8hxx_1abec84214d67c2a8b2f1d4bb7a3ebc31f" kindref="member">ny</ref>;</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/>nor_ISO(<sp/>s,<sp/><ref refid="_base_curve__compatibility_8hxx_1a0823ad2cb05b7e1c773361d49f95bad8" kindref="member">nx</ref>,<sp/><ref refid="_base_curve__compatibility_8hxx_1abec84214d67c2a8b2f1d4bb7a3ebc31f" kindref="member">ny</ref><sp/>);</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>qxx<sp/>=<sp/>qx<sp/>-<sp/>x;</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>qyy<sp/>=<sp/>qy<sp/>-<sp/>y;</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>qxx<sp/>*<sp/><ref refid="_base_curve__compatibility_8hxx_1a0823ad2cb05b7e1c773361d49f95bad8" kindref="member">nx</ref><sp/>+<sp/>qyy<sp/>*<sp/><ref refid="_base_curve__compatibility_8hxx_1abec84214d67c2a8b2f1d4bb7a3ebc31f" kindref="member">ny</ref><sp/>-<sp/>offs;<sp/></highlight><highlight class="comment">//<sp/>signed<sp/>distance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>pt<sp/>=<sp/>abs(qxx<sp/>*<sp/><ref refid="_base_curve__compatibility_8hxx_1abec84214d67c2a8b2f1d4bb7a3ebc31f" kindref="member">ny</ref><sp/>-<sp/>qyy<sp/>*<sp/><ref refid="_base_curve__compatibility_8hxx_1a0823ad2cb05b7e1c773361d49f95bad8" kindref="member">nx</ref>);</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_clothoids_8hh_1a50b619e42946f472ff4030e0bbd74f2e" kindref="member">G2LIB_DEBUG_MESSAGE</ref>(</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Clothoid::closest_point_ISO\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;||P-P0||<sp/>=<sp/>{}<sp/>and<sp/>{},<sp/>|(P-P0).T|<sp/>=<sp/>{}\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DST,<sp/>hypot(qxx,qyy),<sp/>pt</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pt<sp/>&gt;<sp/><ref refid="_clothoids_8hh_1ab80a1f996b6c8ba6a757bfde8c3689b6" kindref="member">GLIB2_TOL_ANGLE</ref>*hypot(qxx,qyy)<sp/>?<sp/>-1<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"></highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/>ClothoidCurve::theta_total_variation()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cerco<sp/>punto<sp/>minimo<sp/>parabola</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>root<sp/>=<sp/>-k/dk;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>kL<sp/><sp/>=<sp/>m_CD.m_kappa0;</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>kR<sp/><sp/>=<sp/>m_CD.kappa(m_L);</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>thL<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>thR<sp/>=<sp/>m_CD.delta_theta(m_L);</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>kL*kR<sp/>&lt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>root<sp/>=<sp/>-m_CD.m_kappa0/m_CD.m_dk;</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>root<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>root<sp/>&lt;<sp/>m_L<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>thM<sp/><sp/>=<sp/>m_CD.delta_theta(root);</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>abs(<sp/>thR<sp/>-<sp/>thM<sp/>)<sp/>+<sp/>abs(<sp/>thM<sp/>-<sp/>thL<sp/>);</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>abs(<sp/>thR<sp/>-<sp/>thL<sp/>);</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1139"><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/>ClothoidCurve::theta_min_max(<sp/>real_type<sp/>&amp;<sp/>thMin,<sp/>real_type<sp/>&amp;<sp/>thMax<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cerco<sp/>punto<sp/>minimo<sp/>parabola</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>root<sp/>=<sp/>-k/dk;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>kL<sp/><sp/>=<sp/>m_CD.m_kappa0;</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>kR<sp/><sp/>=<sp/>m_CD.kappa(m_L);</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>thL<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>thR<sp/>=<sp/>m_CD.delta_theta(m_L);</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>thL<sp/>&lt;<sp/>thR<sp/>)<sp/>{<sp/>thMin<sp/>=<sp/>thL;<sp/>thMax<sp/>=<sp/>thR;<sp/>}</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>thMin<sp/>=<sp/>thR;<sp/>thMax<sp/>=<sp/>thL;<sp/>}</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>kL*kR<sp/>&lt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>root<sp/>=<sp/>-m_CD.m_kappa0/m_CD.m_dk;</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>root<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>root<sp/>&lt;<sp/>m_L<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>thM<sp/>=<sp/>m_CD.delta_theta(root);</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>thM<sp/>&lt;<sp/>thMin<sp/>)<sp/>thMin<sp/>=<sp/>thM;</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>thM<sp/>&gt;<sp/>thMax<sp/>)<sp/>thMax<sp/>=<sp/>thM;</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>thMax<sp/>-<sp/>thMin;</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"></highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1162"><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/>ClothoidCurve::curvature_min_max(<sp/>real_type<sp/>&amp;<sp/>kMin,<sp/>real_type<sp/>&amp;<sp/>kMax<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cerco<sp/>punto<sp/>minimo<sp/>parabola</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>root<sp/>=<sp/>-k/dk;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/>kMin<sp/>=<sp/>m_CD.m_kappa0;</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/>kMax<sp/>=<sp/>m_CD.kappa(m_L);</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>kMax<sp/>&lt;<sp/>kMin<sp/>)<sp/>swap(<sp/>kMax,<sp/>kMin<sp/>);</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kMax<sp/>-<sp/>kMin;</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/>ClothoidCurve::curvature_total_variation()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cerco<sp/>punto<sp/>minimo<sp/>parabola</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>root<sp/>=<sp/>-k/dk;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>km<sp/>=<sp/>m_CD.m_kappa0;</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>kp<sp/>=<sp/>m_CD.kappa(m_L);</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>abs(kp-km);</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"></highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/>ClothoidCurve::integral_curvature2()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_L*(<sp/>m_CD.m_kappa0*(m_CD.m_kappa0+m_L*m_CD.m_dk)<sp/>+</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(m_L*m_L)*m_CD.m_dk*m_CD.m_dk/3<sp/>);</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"></highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1193"><highlight class="normal"></highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref></highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/>ClothoidCurve::integral_jerk2()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>k2<sp/>=<sp/>m_CD.m_kappa0*m_CD.m_kappa0;</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>k3<sp/>=<sp/>m_CD.m_kappa0*k2;</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>k4<sp/>=<sp/>k2*k2;</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>t1<sp/>=<sp/>m_L;</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>t2<sp/>=<sp/>m_L*t1;</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>t3<sp/>=<sp/>m_L*t2;</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>t4<sp/>=<sp/>m_L*t3;</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((((t4/5*m_CD.m_dk+t3*m_CD.m_kappa0)*m_CD.m_dk+(1+2*t2)*k2)*m_CD.m_dk+2*t1*k3)*m_CD.m_dk+k4)*m_L;</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref></highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/>ClothoidCurve::integral_snap2()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>k2<sp/><sp/>=<sp/>m_CD.m_kappa0*m_CD.m_kappa0;</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>k3<sp/><sp/>=<sp/>m_CD.m_kappa0*k2;</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>k4<sp/><sp/>=<sp/>k2*k2;</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>k5<sp/><sp/>=<sp/>k4*m_CD.m_kappa0;</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>k6<sp/><sp/>=<sp/>k4*k2;</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>dk2<sp/>=<sp/>m_CD.m_dk*m_CD.m_dk;</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>dk3<sp/>=<sp/>m_CD.m_dk*dk2;</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>dk4<sp/>=<sp/>dk2*dk2;</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>dk5<sp/>=<sp/>dk4*m_CD.m_dk;</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>dk6<sp/>=<sp/>dk4*dk2;</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>t2<sp/><sp/>=<sp/>m_L;</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>t3<sp/><sp/>=<sp/>m_L*t2;</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>t4<sp/><sp/>=<sp/>m_L*t3;</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>t5<sp/><sp/>=<sp/>m_L*t4;</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>t6<sp/><sp/>=<sp/>m_L*t5;</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_g2lib_1acc8095aa40beedee44352de62f232033" kindref="member">real_type</ref><sp/>t7<sp/><sp/>=<sp/>m_L*t6;</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>(t7/7)*dk6<sp/>+</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dk5*m_CD.m_kappa0*t6<sp/>+</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3*dk4*k2*t5<sp/>+<sp/>5*dk3*k3*t4<sp/>+</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>5*dk2*k4*t3<sp/>+<sp/>3*dk3*t3<sp/>+</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3*m_CD.m_dk*k5*t2<sp/>+</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>9*dk2*m_CD.m_kappa0*t2<sp/>+</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k6+9*k2*m_CD.m_dk<sp/>)<sp/>*<sp/>m_L;</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"></highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/>ClothoidCurve::info()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1240"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fmt::format(<sp/></highlight><highlight class="stringliteral">&quot;Clothoid\n{}\n&quot;</highlight><highlight class="normal">,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);<sp/>}</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"></highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><ref refid="namespace_g2lib_1a8fcbace87db5a5e71391e0040878f2c3" kindref="member">ostream_type</ref><sp/>&amp;</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/>operator<sp/>&lt;&lt;<sp/>(<sp/>ostream_type<sp/>&amp;<sp/>stream,<sp/>ClothoidCurve<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>c<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/>fmt::print(<sp/>stream,</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;x0<sp/><sp/><sp/><sp/><sp/>=<sp/>{:&lt;12}<sp/>x1<sp/><sp/><sp/><sp/><sp/>=<sp/>{:&lt;12}\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;y0<sp/><sp/><sp/><sp/><sp/>=<sp/>{:&lt;12}<sp/>y1<sp/><sp/><sp/><sp/><sp/>=<sp/>{:&lt;12}\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;theta0<sp/>=<sp/>{:&lt;12}<sp/>theta1<sp/>=<sp/>{:&lt;12}\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;kappa0<sp/>=<sp/>{:&lt;12}<sp/>kappa1<sp/>=<sp/>{:&lt;12}\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;dk<sp/><sp/><sp/><sp/><sp/>=<sp/>{:&lt;12}<sp/>L<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:&lt;12}\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;{:.6}&quot;</highlight><highlight class="normal">,c.x_begin()),</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;{:.6}&quot;</highlight><highlight class="normal">,c.x_end()),</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;{:.6}&quot;</highlight><highlight class="normal">,c.y_begin()),</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;{:.6}&quot;</highlight><highlight class="normal">,c.y_end()),</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;{:.6}&quot;</highlight><highlight class="normal">,c.theta_begin()),</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;{:.6}&quot;</highlight><highlight class="normal">,c.theta_end()),</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;{:.6}&quot;</highlight><highlight class="normal">,c.kappa_begin()),</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;{:.6}&quot;</highlight><highlight class="normal">,c.kappa_end()),</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;{:.6}&quot;</highlight><highlight class="normal">,c.m_CD.m_dk),</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;{:.6}&quot;</highlight><highlight class="normal">,c.m_L)</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stream;</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"></highlight></codeline>
<codeline lineno="1266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"></highlight></codeline>
<codeline lineno="1268"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EOF:<sp/>Clothoid.cc</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/enrico/Ricerca/develop/PINS/pins-mechatronix/LibSources/submodules/Clothoids/src/Clothoid.cc"/>
  </compounddef>
</doxygen>
