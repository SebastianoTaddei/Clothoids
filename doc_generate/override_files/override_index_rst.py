'''

This file overrides the index.rst file generated by Sphinx. This is required
since you cannot edit it during sphinx-quickstart.

This script does the following:

- If the user wants to document a Python project, then we add _autodoc/modules
  to the toctree.
- If the user wants to document a C/C++ project, then we add the :glob: option
  and _breathe/* to the toctree.

Note:

- We use a Python script instead of something better suited for this task like
  pearl or bash because we want to keep the dependencies of this project to a
  minimum (since Python is already a dependency of Sphinx).
- For the same reason, we use only standard Python libraries, and keep
  third-party libraries to a minimum.

'''

#1# IMPORTS

# Standard imports
import sys # to get the command line arguments and exit the script

#1# FUNCTIONS

def override(config):
    '''
    override overrides the index.rst file generated by Sphinx.

    :param config: The configuration dictionary.
    :type config: dict
    :return: A boolean indicating whether the override was successful.
    :rtype: bool
    '''

    # Open the index.rst file and read its contents
    try:
        with open(config['file'], 'r', encoding='utf-8') as file:
            index_rst = file.read()
    except FileNotFoundError:
        print(f'Error: The file {config["file"]} does not exist.')
        return False

    # If the user wants to document a Python project, then we add
    # _autodoc/modules to the toctree
    if config['doc_python_package'] is True:
        index_rst = index_rst.replace(':caption: Contents:',
                                      ':caption: Contents:\n\n   _autodoc/modules')

    # If the user wants to document a C/C++ project, then we add the :glob:
    # option and _breathe/* to the toctree
    if config['doc_cpp_project'] is True:
        index_rst = index_rst.replace('.. toctree::',
                                      '.. toctree::\n   :glob:')
        if config['doc_python_package'] is True:
            index_rst = index_rst.replace('_autodoc/modules',
                                          '_autodoc/modules\n   _breathe/*')
        else:
            index_rst = index_rst.replace(':caption: Contents:',
                                          ':caption: Contents:\n\n   _breathe/*')

    # Write the new index.rst file
    try:
        with open(config['file'], 'w', encoding='utf-8') as file:
            file.write(index_rst)
    except FileNotFoundError:
        print(f'Error: The file {config["file"]} does not exist.')
        return False

    return True

def main():
    '''
    main is the main function of this script. It calls override with the
    configuration dictionary generated by Sphinx.

    :return: A boolean indicating whether the override was successful.
    :rtype: bool
    '''

    # Get the command line arguments
    config                       = {}
    config['file']               = sys.argv[1]
    config['doc_python_package'] = sys.argv[2] == 'true'
    config['doc_cpp_project']    = sys.argv[3] == 'true'

    # Override the index.rst file
    result = override(config)

    return result

#1# MAIN

if __name__ == '__main__':
    RESULT = main()

    # Return the result
    if RESULT is True:
        sys.exit(0)
    else:
        sys.exit(1)
